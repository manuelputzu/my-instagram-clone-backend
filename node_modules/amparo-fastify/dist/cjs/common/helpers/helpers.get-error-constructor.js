"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_classes_errors_1 = require("../classes/common.classes.errors");
const common_utils_assert_unreachable_1 = require("../utils/common.utils.assert-unreachable");
function getErrorConstructor(errorName) {
    switch (errorName) {
        case "validationerror" /* ErrorName.validation */: {
            return common_classes_errors_1.ValidationError;
        }
        case "notfounderror" /* ErrorName.notFound */: {
            return common_classes_errors_1.NotFoundError;
        }
        case "casterror" /* ErrorName.cast */: {
            return common_classes_errors_1.CastError;
        }
        case "duplicatekeyerror" /* ErrorName.duplicatekey */: {
            return common_classes_errors_1.DuplicateKeyError;
        }
        case "authenticationerror" /* ErrorName.authentication */: {
            return common_classes_errors_1.AuthenticationError;
        }
        case "authorizationerror" /* ErrorName.authorization */: {
            return common_classes_errors_1.AuthorizationError;
        }
        case "forbiddenerror" /* ErrorName.forbidden */: {
            return common_classes_errors_1.ForbiddenError;
        }
        case "conflicterror" /* ErrorName.conflict */: {
            return common_classes_errors_1.ConflictError;
        }
        case "badrequesterror" /* ErrorName.badRequest */: {
            return common_classes_errors_1.BadRequestError;
        }
        case "internalservererror" /* ErrorName.internalServerError */: {
            return common_classes_errors_1.InternalServerError;
        }
        default: {
            return (0, common_utils_assert_unreachable_1.assertUnreachable)(errorName, `Unknown error name provided`);
        }
    }
}
exports.default = getErrorConstructor;
//# sourceMappingURL=helpers.get-error-constructor.js.map
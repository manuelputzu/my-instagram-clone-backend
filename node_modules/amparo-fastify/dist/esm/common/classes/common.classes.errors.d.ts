import { StatusCodes } from "http-status-codes";
import { ErrorName } from "../enums/common.enums.error-names";
declare abstract class CustomError extends Error {
    status: StatusCodes;
    name: ErrorName;
    cause?: Error;
    constructor(message: string, status: StatusCodes, name: ErrorName, cause?: Error);
}
declare class ValidationError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class NotFoundError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class CastError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class DuplicateKeyError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class AuthenticationError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class AuthorizationError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class ForbiddenError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class ConflictError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class BadRequestError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
declare class InternalServerError extends CustomError {
    constructor(message: string | null, originalError?: Error);
}
type AppCustomErrorConstructor = typeof ValidationError | typeof NotFoundError | typeof CastError | typeof DuplicateKeyError | typeof AuthenticationError | typeof AuthorizationError | typeof ForbiddenError | typeof ConflictError | typeof BadRequestError | typeof InternalServerError;
export type { AppCustomErrorConstructor };
export { CustomError, ValidationError, NotFoundError, CastError, DuplicateKeyError, AuthenticationError, AuthorizationError, ForbiddenError, ConflictError, BadRequestError, InternalServerError, };
//# sourceMappingURL=common.classes.errors.d.ts.map